@inherits BasePlugin
@rendermode InteractiveServer

<PluginBody Title="File/Folders List">
    <ActionsFragment>
        @if (FolderId != null)
        {
            <Button Href="@GetUrl("Files List", new { folderId = ParentId })" Outline>
                Back
            </Button>
        }
        <Button @onclick="() => FolderCreateModalOpen = true" Color="Color.Secondary">
            <Icon Name="IconName.Plus" />Add Folder
        </Button>
        <Button @onclick="() => FileUploadModalOpen = true" Color="Color.Primary">
            <Icon Name="IconName.Plus" />Upload File
        </Button>
    </ActionsFragment>
    <ChildContent>
        <DataTable Items="Items">
            <DataTableItem Label="Name">
                @if (@context.IsFolder)
                {
                    <Button Link Href="@GetUrl("Files List", new { folderId = @context.Id })">
                        @context.Name
                    </Button>
                }
                else
                {
                    <Button Link download="@context.Name" Href="@GetUrl("Files List", new { folderId = @context.Id })">
                        @context.Name
                    </Button>
                }
            </DataTableItem>
            <DataTableItem Label="Type">
                <Badge Color="Color.Info" Visible="@context.IsFolder">
                    Folder
                </Badge>
                <Badge Color="Color.Success" Visible="!context.IsFolder">
                    @context.ContentType
                </Badge>
            </DataTableItem>
            <DataTableItem Label="Size">
                @context.Size
            </DataTableItem>
            <DataTableItem>
                <Stack>
                    <Button Visible="!context.IsFolder" download="@context.Name" Href="@GetUrl("Files List", new { folderId = context.Id })" Color="Color.Primary" Size="ButtonSize.Small">
                        Download
                    </Button>
                    <Button Visible="context.IsFolder" Color="Color.Primary" Href="@GetUrl("Files List", new { folderId = context.Id })"  Size="ButtonSize.Small">
                        <Icon Name="IconName.Eye" />Open
                    </Button>
                    @if (!context.IsParentFolder)
                    {
                        <Button Color="Color.Secondary" Outline @onclick="() => OpenUpdateModal(context)"  Size="ButtonSize.Small">
                            <Icon Name="IconName.Edit" />Edit
                        </Button>
                        <Button Color="Color.Danger" Outline @onclick="() => OnConfirm(context)" Size="ButtonSize.Small">
                            <Icon Name="IconName.Delete" />Delete
                        </Button>
                    }
                </Stack>
            </DataTableItem>
        </DataTable>
    </ChildContent>
</PluginBody>

<Confirm OnConfirm="OnDelete" OnCancel="OnConfirmClose" Visible="SelectedItem != null">
    Are you sure to delete @(SelectedItem!.IsFolder ? "folder" : "file") @SelectedItem!.Name?
</Confirm>

<FolderCreateModal FolderId="@FolderId" Visible="FolderCreateModalOpen" OnSubmit="OnCreateFolder" OnCancel="OnCreateFolderCancel"/>

<FileUploadModal Config="FileUploadConfig" Visible="FileUploadModalOpen" OnSubmit="OnUpload" OnCancel="OnUploadCancel"/>

@if (FolderUpdateModalOpen && FolderUpdateModel != null && RootFolder != null)
{
    <FolderUpdateModal RootFolder="RootFolder" Model="FolderUpdateModel" OnSubmit="OnUpdateFolder" OnCancel="OnUpdateFolderCancel"/>
}

@if (FileUpdateModalOpen && FileUpdateModel != null && RootFolder != null)
{
    <FileUpdateModal RootFolder="RootFolder" Model="FileUpdateModel" OnSubmit="OnUpdateFile" OnCancel="OnUpdateFileCancel"/>
}
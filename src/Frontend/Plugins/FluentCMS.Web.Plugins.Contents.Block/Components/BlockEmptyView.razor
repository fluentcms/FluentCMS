@inherits BasePlugin
@rendermode InteractiveServer
@namespace FluentCMS.Web.Plugins.Contents.Block

<Spacer Size="SpacerSize.Large"/>
<Spacer Size="SpacerSize.Large"/>
<Stack Justify="StackJustify.Center">
    <Button @onclick="OpenBlockModal" Color="Color.Primary">Choose Type</Button>
</Stack>
<Spacer Size="SpacerSize.Large"/>
<Spacer Size="SpacerSize.Large"/>

<Modal Size="ModalSize.Large" Visible="BlockModalOpen" OnClose="CloseBlockModal">
    <ModalHeader>
        <ModalTitle>Choose Block Type</ModalTitle>
    </ModalHeader>
        <div class="f-block-modal-body">
            <div class="f-block-modal-sidebar">
                <div class="f-block-modal-sidebar-item @(CurrentCategory == string.Empty ? "f-block-modal-sidebar-item-active" : "")"
                        @onclick="() => ChooseCategory(string.Empty)">
                    All
                </div>

                @foreach (var category in Categories)
                {
                    <div class="f-block-modal-sidebar-item @(CurrentCategory == category ? "f-block-modal-sidebar-item-active" : "")"
                            @onclick="() => ChooseCategory(category)">
                        @category
                    </div>
                }
            </div>
            <div class="f-block-modal-previews">
                <div class="f-block-modal-preview">
                    @foreach (var block in FilteredBlocks.Where((value, index) => index % 2 == 0))
                    {
                        <BlockPreviewItem Block="block" @onclick="() => ChooseBlockType(block)" />
                    }
                </div>
                <div class="f-block-modal-preview">
                    @foreach (var block in FilteredBlocks.Where((value, index) => index % 2 != 0))
                    {
                        <BlockPreviewItem Block="block" @onclick="() => ChooseBlockType(block)" />
                    }
                </div>
            </div>
        </div>
</Modal>

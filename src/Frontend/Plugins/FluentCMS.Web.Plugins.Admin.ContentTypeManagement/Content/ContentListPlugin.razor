@inherits BaseContentPlugin
@rendermode InteractiveServer

@if (!string.IsNullOrEmpty(ContentTypeSlug) && ContentType != null && ContentType.Fields != null && Contents != null)
{
    <PluginBody Title="@ContentType.Title">
        <ActionsFragment>
            <Button Href="@GetUrl("Create Content", new { slug = ContentTypeSlug })" Color="Color.Primary">
                <Icon Name="IconName.Plus" />New Content
            </Button>
        </ActionsFragment>
        <ChildContent>
            <CascadingValue Value="ContentType">
                <DataTable Items="Contents">
                    @foreach (var field in GetVisibleFields())
                    {
                        <DataTableItem Label="@field.Name">
                            <DynamicComponent Type=@GetDataTableFieldViewType(field) Parameters=@GetParameters(context, field.Name) />
                        </DataTableItem>
                    }
                    <DataTableItem>
                        <Stack>
                            <Button Color="Color.Primary" Href="@GetUrl("Update Content", new { slug = ContentTypeSlug })" Size="ButtonSize.Small">
                                <Icon Name="IconName.Edit" />Edit
                            </Button>
                            <Button Color="Color.Danger" Outline @onclick="() => OnConfirm(context.Id)" Size="ButtonSize.Small">
                                <Icon Name="IconName.Delete" />Delete
                            </Button>
                        </Stack>
                    </DataTableItem>
                </DataTable>
            </CascadingValue>
        </ChildContent>
    </PluginBody>

    <Confirm OnConfirm="OnDelete" OnCancel="OnConfirmClose" Visible="SelectedContentId != null">
        Are you sure to delete content?
    </Confirm>
}

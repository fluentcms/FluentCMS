@inherits BaseComponent
@inject IJSRuntime JS

@namespace FluentCMS.Web.UI.Components

<HeadContent>
    @if(!string.IsNullOrEmpty(Title)) 
    {
        <title>@Title</title>
    }
</HeadContent>

<nav @attributes="AdditionalAttributes"
     @ref="element"
    class="@this.GetClasses()">
    @if (HasBack)
    {
        <PageBackButton />
    }

    <div class="@this.ClassName("PageHeaderBody")">
        <h1 class="@this.ClassName("PageHeaderTitle")">
            @Title
        </h1>
        @if (PageHeaderActions != null)
        {
            <div class="@this.ClassName("PageHeaderActions")">
                @PageHeaderActions
            </div>
        }
    </div>
     
    @if (PageHeaderActions != null || PageHeaderSubtitle != null || !string.IsNullOrEmpty(SubTitle))
    {
        <div class="@this.ClassName("PageHeaderSubtitle")">
            @if (PageHeaderSubtitle != null)
            {
                @PageHeaderSubtitle
            }
            else
            {
                @SubTitle
            }
        </div>
    }
</nav>
@code {
    public ElementReference element;

    private IJSObjectReference module = default!;


    [Parameter]
    public bool HasBack { get; set; }

    [Parameter]
    public RenderFragment? PageHeaderActions { get; set; }

    [Parameter]
    public RenderFragment? PageHeaderSubtitle { get; set; }

    [Parameter]
    public string? SubTitle { get; set; }

    [Parameter]
    public string? Title { get; set; }

    public async ValueTask DisposeAsync()
    {
        await module.InvokeVoidAsync("close", DotNetObjectReference.Create(this), element);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender) return;

        module = await JS.InvokeAsync<IJSObjectReference>("import", "/_content/FluentCMS.Web.UI.Components/Components/Page/PageHeader.razor.js");

        await module.InvokeVoidAsync("initialize", DotNetObjectReference.Create(this), element, new { });
    }
}

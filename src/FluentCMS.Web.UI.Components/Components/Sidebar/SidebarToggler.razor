@inherits BaseComponent
@inject IJSRuntime JS

@namespace FluentCMS.Web.UI.Components

<button @attributes="AdditionalAttributes" 
        class="@this.GetClasses()" 
        @onclick="OnClick">
    <svg aria-hidden="true" class="w-6 h-6" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
        <path fill-rule="evenodd"
            d="M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h6a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z"
            clip-rule="evenodd"></path>
    </svg>
    <svg aria-hidden="true" class="hidden w-6 h-6" fill="currentColor" viewBox="0 0 20 20"
        xmlns="http://www.w3.org/2000/svg">
        <path fill-rule="evenodd"
            d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
            clip-rule="evenodd"></path>
    </svg>
    <span class="sr-only">Toggle sidebar</span>
</button>

@code {
    [Parameter]
    public string SidebarId { get; set; }

    private IJSObjectReference module = default!;

    bool IsOpen { get; set; } = false;

    [JSInvokable]
    public void Update(bool isOpen)
    {
        IsOpen = isOpen;
        StateHasChanged();
    }

    async Task OnClick()
    {
        await module.InvokeVoidAsync("toggle", DotNetObjectReference.Create(this), SidebarId, !IsOpen);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender) return;

        module = await JS.InvokeAsync<IJSObjectReference>("import",
        "/_content/FluentCMS.Web.UI.Components/Components/Sidebar/SidebarToggler.razor.js");

        IsOpen = false;

    }
}

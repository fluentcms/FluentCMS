<Page>
    <PageHeader HasBack="false" Title="Roles List">
        <PageHeaderActions>
            <ButtonGroup>
                <Button autofocus="true" 
                        Color="Color.Primary" 
                        Href="?PluginDef=Role Management&typeName=Create Role" 
                        Id="appCreateButton"
                        Size="ButtonSize.Small">
                    <Icon Name="IconName.Plus" />
                    Add Role
                </Button>
            </ButtonGroup>
        </PageHeaderActions>
    </PageHeader>
    <PageBody>
        <Card>
            <Table>
                <TableHead>
                    <TableCell>Name</TableCell>
                    <TableCell>Description</TableCell>
                    <TableCell Width="TableColumnWidth.Small"></TableCell>
                </TableHead>
                <TableBody id="roleListTable">
                    @foreach (var role in Roles)
                    {
                        <TableRow>
                            <TableCell> @role.Name </TableCell>
                            <TableCell> @role.Description </TableCell>
                            <TableCell>
                                <ButtonGroup>
                                    <Button data-test="preview-btn"
                                            Href="@($"?PluginDef=Role Management&typeName=Role Detail&id={role.Id}")"
                                            Ghost="true"
                                            Size="ButtonSize.Small">
                                        <Icon Name="IconName.Eye" />
                                    </Button>
                                    <Tooltip Placement="TooltipPlacement.Top">Preview</Tooltip>

                                    <Button data-test="edit-btn"
                                            Ghost="true"
                                            Href="@($"?PluginDef=Role Management&typeName=Update Role&id={role.Id}")"
                                            Size="ButtonSize.Small">
                                        <Icon Name="IconName.Edit" />
                                    </Button>
                                    <Tooltip Placement="TooltipPlacement.Top">Edit</Tooltip>

                                    <Button data-test="delete-btn"
                                            Ghost="true"
                                            Size="ButtonSize.Small"
                                            OnClick="@(evt => OnDelete(role))">

                                        <Icon Name="IconName.Delete" />
                                    </Button>
                                    <Tooltip Placement="TooltipPlacement.Top">Delete</Tooltip>

                                </ButtonGroup>
                            </TableCell>
                        </TableRow>
                    }

                </TableBody>
            </Table>

            @if (Roles.Count == 0)
            {
                <EmptyTable Message="No Roles Found!">
                    <Button autofocus="true"
                            Color="Color.Primary" 
                            Href="?PluginDef=Role Management&typeName=Create Role"
                            Id="roleEmptyCreateButton" 
                            Size="ButtonSize.Small">
                        <Icon Name="IconName.Plus" />
                        Add Role
                    </Button>
                </EmptyTable>
            }
        </Card>

    </PageBody>
</Page>

@code {
    [Inject]
    NavigationManager? NavigationManager { get; set; }

    [Inject]
    RoleClient? RoleClient { get; set; }

    [Inject]
    ConfirmService Confirm { get; set; }

    List<RoleDetailResponse> Roles { get; set; } = [];

    async Task Load()
    {
        var response = await RoleClient!.GetAllAsync();

        if (response?.Data == null) return;

        Roles = response.Data.ToList();
    }

    protected override async Task OnInitializedAsync()
    {
        await Load();
    }

    private async Task OnDelete(RoleDetailResponse role)
    {
        var result = await Confirm.Show("Are you sure to remove this role?");

        if (!result) return;

        await RoleClient!.DeleteAsync(role.Id);

        await Load();
    }
}

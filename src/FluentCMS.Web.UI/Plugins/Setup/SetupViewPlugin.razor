@inject SetupManager SetupManager
@inject NavigationManager NavigationManager

@if (!Initialized)
{
    <EditForm Model="@SetupModel"
              OnValidSubmit="SetupStart">
        <Card>
            <CardBody>
                <CardTitle>Setup The Platform</CardTitle>
                <Spacer />
                <Input @bind-Value="SetupModel.Username"
                       Label="Username"
                       Required="true" />
                <Input @bind-Value="SetupModel.Email"
                       Label="Email"
                       Required="true"
                       Type="InputType.Email" />
                <Input Label="Password"
                       Required="true"
                       Type="InputType.Password" />
                <Button Block="true"
                        Color="Color.Primary"
                        Type="ButtonType.Submit">
                    Start Setup
                </Button>
            </CardBody>
        </Card>
    </EditForm>
}
else
{
    <div>
        <p>Setup is already done!</p>
    </div>
}
@code {
    public bool Initialized { get; set; } = false;

    public SetupRequest SetupModel { get; set; } = new SetupRequest
        {
            Username = "admin",
            Email = "admin@example.com",
            Password = "Passw0rd!",
            AppTemplateName = "Blank",
            SiteTemplateName = "Blank"
        };

    protected override async Task OnInitializedAsync()
    {
        Initialized = await SetupManager.IsInitialized();
        SetupModel.AdminDomain = new Uri(NavigationManager.BaseUri).Authority;
    }

    private async Task SetupStart()
    {
        if (await SetupManager.Start(SetupModel))
            NavigationManager.NavigateTo("/", true);
    }
}

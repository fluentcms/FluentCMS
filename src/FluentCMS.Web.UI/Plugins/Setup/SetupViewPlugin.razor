@inject SetupManager SetupManager
@inject NavigationManager NavigationManager

@if (!Initialized)
{
    <EditForm Model="@SetupModel"
              OnValidSubmit="SetupStart">
        <Typography Size="TextSize.H5">
            Welcome To FluentCMS
        </Typography>
        <Spacer />
        <Input @bind-Value="SetupModel.Username"
               Label="Username"
               Placeholder="username"
               Required="true"/>
        <Input @bind-Value="SetupModel.Email"
               Label="Email"
               Placeholder="name@example.com"
               Required="true"
               Type="InputType.Email"/>
        <Input @bind-Value="SetupModel.Password"
               Label="Password"
               Placeholder="••••••••••"
               Required="true"
               Type="InputType.Password"/>
        <Spacer/>
        <Button Block="true"
                Color="Color.Primary"
                Type="ButtonType.Submit">
            Setup
        </Button>
    </EditForm>
}
else
{
    <div>
        <p>Setup is already done!</p>
    </div>
}

@code {
    public bool Initialized { get; set; } = false;

    public SetupRequest SetupModel { get; set; } = new SetupRequest
    {
        Username = "admin",
        Email = "admin@example.com",
        Password = "Passw0rd!",
        AppTemplateName = "Blank",
        SiteTemplateName = "Blank"
    };

    protected override async Task OnInitializedAsync()
    {
        Initialized = await SetupManager.IsInitialized();
        SetupModel.AdminDomain = new Uri(NavigationManager.BaseUri).Authority;
    }

    private async Task SetupStart()
    {
        if (await SetupManager.Start(SetupModel))
            NavigationManager.NavigateTo("/", true);
    }

}

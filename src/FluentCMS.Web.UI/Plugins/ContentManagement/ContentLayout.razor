@inherits BaseComponent

<Grid>
    <GridItem HideSmall="true"
            HideMedium="true"
            Small="GridItemColumn.Auto">
        <Sidebar Title="Collections"
                Secondary="true">
            <ChildContent>
                @foreach (var collection in Collections)
                {
                    <SidebarItem Active="@(currentContentTypeSlug == collection.Slug)" 
                                 Href="@NavigationManager.Plugin("Content Management", "Content List", new { contentTypeSlug = collection.Slug })"
                                 id="@($"contentSidebar{@collection.Slug}Link")">
                        @collection.Title
                    </SidebarItem>
                }
            </ChildContent>
        </Sidebar>
    </GridItem>
    <GridItem Small="GridItemColumn.Grow">
        @ChildContent
    </GridItem>
</Grid>

@code {
    [Inject]
    ContentClient ContentClient { get; set; } = default!;

    [Inject]
    ContentTypeClient ContentTypeClient { get; set; } = default!;

    [Inject]
    ILocalStorageService LocalStorageService { get; set; } = default!;

    [Inject]
    NavigationManager NavigationManager { get; set; } = default!;

    List<ContentTypeDetailResponse> Collections { get; set; } = [];

    string currentContentTypeSlug {get; set;}

    async Task Load()
    {
        var response = await ContentTypeClient.GetAllAsync();

        if (response?.Data == null) return;

        Collections = response.Data.ToList();

        currentContentTypeSlug = NavigationManager.GetStringFromQuery("contentTypeSlug");
    }

    async Task OnChangeApp()
    {
        await Load();
    }

    protected override async Task OnInitializedAsync()
    {
        await Load();
        StateHasChanged();
    }
}

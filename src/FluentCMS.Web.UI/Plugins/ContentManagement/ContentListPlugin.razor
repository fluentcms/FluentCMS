@using FluentCMS.Web.UI.Plugins.ContentManagement

<ContentLayout>
    <Page>
        <PageHeader Title="@PageTitle">
            <PageHeaderActions>
                <ButtonGroup>
                    <Button Color="Color.Primary"
                        Href="@($"?pluginDef=Content Management&typeName=Create Content&appSlug={AppSlug}&contentTypeSlug={ContentTypeSlug}")"
                        id="contentCreateButton" Size="ButtonSize.Small">
                        <Icon Name="IconName.Plus" />
                        Insert
                    </Button>
                </ButtonGroup>
            </PageHeaderActions>

        </PageHeader>
        <PageBody>
            <ChildContent>
                <Card>
                    <ChildContent>

                        @if (ContentType != null && ContentType.Fields?.Count > 0)
                        {
                            <Table>
                                <TableHead>
                                    @foreach (var field in Fields)
                                    {
                                        <TableCell>
                                            @field.Title
                                        </TableCell>
                                    }
                                    <TableCell Width="TableColumnWidth.Small"></TableCell>
                                </TableHead>
                                <TableBody id="contentListTable">
                                    @foreach (var item in Data)
                                    {
                                        <TableRow>
                                            @foreach (var field in ContentType.Fields.ToList())
                                            {
                                                <TableCell>
                                                    @(item.Value[field.Slug])
                                                </TableCell>
                                            }
                                            <TableCell>
                                                <ButtonGroup>
                                                    <Button Ghost="true"
                                                        Href="@($"?pluginDef=Content Management&typeName=Update Content&appSlug={AppSlug}&contentTypeSlug={ContentTypeSlug}&id={item.Id}")"
                                                        Size="ButtonSize.Small">
                                                        <Icon Name="IconName.Edit" />
                                                    </Button>
                                                    <Tooltip Placement="TooltipPlacement.Top">Edit</Tooltip>

                                                    <Button Ghost="true" Size="ButtonSize.Small"
                                                        OnClick="@(evt => OnDelete(item))">
                                                        <Icon Name="IconName.Delete" />
                                                    </Button>
                                                    <Tooltip Placement="TooltipPlacement.Top">Delete</Tooltip>
                                                </ButtonGroup>
                                            </TableCell>
                                        </TableRow>
                                    }
                                </TableBody>
                            </Table>
                        }

                        @if (ContentType.Fields?.Count == 0)
                        {
                            <EmptyTable Message="This Content Type doesn't have any field">
                                <Button Color="Color.Primary"
                                    Href="@($"?PluginDef=ContentType Management&typeName=Update ContentType&id={ContentType.Id}&appSlug={AppSlug}")">

                                    <Icon Name="IconName.Edit" />
                                    Edit @ContentType.Title
                                </Button>

                            </EmptyTable>
                        }
                        else if (Data.Count == 0)
                        {
                            <EmptyTable Message="There is no Content yet!">
                                <Button Color="Color.Primary"
                                    Href="@($"?pluginDef=Content Management&typeName=Create Content&appSlug={AppSlug}&contentTypeSlug={ContentTypeSlug}")"
                                    id="contentCreateButton" Size="ButtonSize.Small">
                                    <Icon Name="IconName.Plus" />
                                    Add First @ContentType.Title
                                </Button>
                            </EmptyTable>
                        }
                    </ChildContent>
                </Card>
            </ChildContent>
        </PageBody>
    </Page>
</ContentLayout>

@code {
    [Inject]
    AppClient AppClient { get; set; } = default!;

    [Inject]
    ConfirmService Confirm { get; set; } = default!;

    [Inject]
    ContentClient ContentClient { get; set; } = default!;

    [Inject]
    ContentTypeClient ContentTypeClient { get; set; } = default!;

    [Inject]
    NavigationManager NavigationManager { get; set; } = default!;

    string? AppSlug;

    string? ContentTypeSlug;

    ContentTypeDetailResponse ContentType { get; set; } = new();

    List<ContentDetailResponse> Data { get; set; } = [];

    List<ContentTypeField> Fields { get; set; } = [];

    string PageTitle = "Content List";

    async Task OnDelete(ContentDetailResponse content)
    {
        var result = await Confirm.Show("Are you sure to remove this row?");

        if (result)
        {
            await ContentClient.DeleteAsync(AppSlug, ContentTypeSlug, content.Id);
            await FetchData();
        }
    }

    protected async Task FetchData()
    {
        AppSlug = NavigationManager.GetStringFromQuery("appSlug");
        ContentTypeSlug = NavigationManager.GetStringFromQuery("contentTypeSlug");

        if (!string.IsNullOrEmpty(AppSlug) && !string.IsNullOrEmpty(ContentTypeSlug))
        {
            ContentType = (await ContentTypeClient.GetBySlugAsync(ContentTypeSlug, AppSlug)).Data;

            if (ContentType != null)
            {
                PageTitle = ContentType.Title + " List";
                Fields = ContentType.Fields.ToList();

                var response = await ContentClient.GetAllAsync(AppSlug, ContentTypeSlug);
                if (response?.Data != null)
                {
                    Data = response.Data.ToList();
                }
            }
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await FetchData();
    }
}

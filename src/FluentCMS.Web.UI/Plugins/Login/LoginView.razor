@using FluentCMS.Services.Models
@inject NavigationManager NavigationManager
@inject HttpClient HttpClient;
@inject IHttpContextAccessor HttpContextAccessor;
@inject FluentCmsAuthenticationStateProvider FluentCmsAuthenticationStateProvider;
<div class="flex justify-center">
    <Card>
        <CardBody>
            <CardTitle>Login</CardTitle>
            <EditForm Model="UserAuthenticateRequest" class="f-login-form" OnValidSubmit="Submit" method="post" FormName="loginForm">
                <FormField Label="Your Username">
                    <InputText Type="text" class="f-input" @bind-Value="UserAuthenticateRequest.Username"></InputText>
                </FormField>
                <FormField Label="Your Password">
                    <InputText class="f-input" @bind-Value="UserAuthenticateRequest.Password" type="password"></InputText>
                </FormField>
                <FormField>
                    <div class="flex items-center">
                        <InputCheckbox class="f-checkbox" @bind-Value="Remember" />
                        <Label>Remember me</Label>
                    </div>
                </FormField>
                <Button size="lg" color="primary" Type="submit">Login to your account</Button>
            </EditForm>
        </CardBody>
    </Card>
</div>

@code {
    [SupplyParameterFromForm]
    public UserAuthenticateRequest UserAuthenticateRequest { get; set; } = new() { Username = "", Password = "" };
    public bool Remember { get; set; }
    public List<Error> Errors = [];
    public async Task Submit()
    {
        var result = await FluentCmsAuthenticationStateProvider.Authenticate(UserAuthenticateRequest);
        if (!result.result)
        {
            Errors = result.errors; // TODO: Show errors
            return;
        }

        //Navigate to home
        NavigationManager.NavigateTo("/");
    }
}

@using System.Text.Json
@using System.Text
@inherits BasePluginComponent
@inject PluginContentClient pluginContentClient
@rendermode InteractiveServer

<EditForm Model="Model" OnValidSubmit="Submit">
    <InputTextArea @bind-Value="Model.Content" Required rows="5" placeholder="Enter you Text/Html content here"></InputTextArea>
<pre>
        @JsonSerializer.Serialize(Model);
</pre>
    <br />
    <Button Type="submit">Update</Button>
</EditForm>

@code {
    [MemoryCachedValue]
    public TextHtmlModel Model { get; set; } = new();

    override protected void OnInitialized()
    {

    }

    public override async Task OnPreRendering()
    {
        // var response = await pluginContentClient.GetByPluginId("TextHtml", AppState.Site.Id, Plugin.Id);
        // var pluginContent = response?.Data?.FirstOrDefault() ??
        //     new PluginContent { PluginId = Plugin.Id, SiteId = AppState.Site.Id };
        // Content = pluginContent["Content"];
        Model.Content = "test121212";
        await Task.CompletedTask;
    }

    private async Task Submit()
    {
        var x = Model.Content;
        var serializerOptions = new JsonSerializerOptions();
        await Task.CompletedTask;
        // var isCreating = Model?.Id == null;
        // if (isCreating)
        // {
        //     var response = await http.PostAsJsonAsync($"PluginContent/TextHtml/Create", Model, serializerOptions);
        //     var pluginContentResult = await response.Content.ReadFromJsonAsync<ApiResult<PluginContent>>();
        // }
        // else
        // {
        //     var response = await http.PutAsJsonAsync($"PluginContent/TextHtml/Update", Model, serializerOptions);
        //     var pluginContentResult = await response.Content.ReadFromJsonAsync<ApiResult<PluginContent>>();
        // }
    }

    // public static Task<HttpResponseMessage> PostJsonAsync(HttpClient httpClient, string url, object body)
    // {
    //     var bodyJson = JsonSerializer.Serialize(body);
    //     var stringContent = new StringContent(bodyJson, Encoding.UTF8, "application/json");
    //     return httpClient.PostAsync(url, stringContent);
    // }

    public class TextHtmlModel
    {
        public string Content { get; set; }
    }
}

<Page>
    <PageHeader HasBack="true"
                Title="ContentType Detail">
    </PageHeader>
    <PageBody>
        <Grid Gutter="GridGutter.Large">
            <GridItem Small="GridItemColumn.Twelve"
                      Medium="GridItemColumn.Seven"
                      Large="GridItemColumn.Nine">
                <Grid Gutter="GridGutter.Large" JustifySmall="GridJustify.End">
                    <GridItem Small="GridItemColumn.Twelve">
                        <Typography><strong>Title:</strong></Typography>
                        <Typography>
                            @View.Title
                        </Typography>
                    </GridItem>
                    <GridItem Small="GridItemColumn.Twelve">
                        <Typography><strong>Slug:</strong></Typography>
                        <Typography>
                            @View.Slug
                        </Typography>
                    </GridItem>
                    <GridItem Small="GridItemColumn.Twelve">
                        <Typography><strong>Description:</strong></Typography>
                        <Typography>
                            @View.Description
                        </Typography>
                    </GridItem>
                    <GridItem Small="GridItemColumn.Twelve">
                        <Typography><strong>Fields:</strong></Typography>
                        <Table>
                            <TableHead>
                                <TableCell>
                                    Slug
                                </TableCell>
                                <TableCell>
                                    Title
                                </TableCell>
                                <TableCell>
                                    Type
                                </TableCell>
                            </TableHead>
                            <TableBody>
                                @foreach (var field in Fields)
                                {
                                    <TableRow>
                                        <TableCell>@field.Slug</TableCell>
                                        <TableCell>@field.Title</TableCell>
                                        <TableCell>Text</TableCell>
                                    </TableRow>
                                }
                            </TableBody>

                        </Table>

                    </GridItem>
                </Grid>
            </GridItem>
            <GridItem Small="GridItemColumn.Twelve"
                      Medium="GridItemColumn.Five"
                      Large="GridItemColumn.Three">
                <Card>
                    <CardBody>
                        @if (!string.IsNullOrEmpty(View.CreatedBy))
                        {
                            <Typography><strong>Created By</strong></Typography>
                            <Typography>@View.CreatedBy</Typography>
                            <Spacer />
                        }
                        @if (!string.IsNullOrEmpty(View.CreatedAt.ToString()))
                        {
                            <Typography><strong>Created At</strong></Typography>
                            <Typography>@View.CreatedAt</Typography>
                            <Spacer />
                        }
                        @if (!string.IsNullOrEmpty(View.ModifiedBy))
                        {
                            <Typography><strong>Modified By</strong></Typography>
                            <Typography>@View.ModifiedBy</Typography>
                            <Spacer />
                        }
                        @if (!string.IsNullOrEmpty(View.ModifiedAt.ToString()))
                        {
                            <Typography><strong>Modified At</strong></Typography>
                            <Typography>@View.ModifiedAt</Typography>
                        }
                    </CardBody>
                </Card>
                <Spacer />
                <Button Block="true"
                        Color="Color.Primary"
                        Href="@NavigationManager.Plugin("ContentType Management", "Update ContentType", new { id = View.Id })" 
                        Item="true"
                        Outline="true">
                    <Icon Name="IconName.Edit" />
                    Edit
                </Button>
                <Spacer Size="SpacerSize.Small" />
                <Button Block="true"
                        Color="Color.Danger"
                        Item="true"
                        Outline="true"
                        OnClick="OnDelete">
                    <Icon Name="IconName.Edit" />
                    Delete
                </Button>
            </GridItem>
        </Grid>
    </PageBody>
</Page>

@code {
    [Inject]
    ConfirmService Confirm { set; get; } = default!;

    [Inject]
    ContentTypeClient ContentTypeClient { get; set; } = default!;

    [Inject]
    NavigationManager NavigationManager { set; get; } = default!;

    Guid? ContentTypeId { get; set; }

    List<ContentTypeField> Fields { get; set; } = [];

    Guid? Id { get; set; }

    string? Message { get; set; }

    ContentTypeDetailResponse View { get; set; } = new();

    async Task LoadData()
    {
        View = (await ContentTypeClient.GetAllAsync())?.Data.ToList().Find(x => x.Id == ContentTypeId);
        Fields = View.Fields.ToList();
    }

    async Task OnDelete()
    {
        var result = await Confirm.Show("Are you sure to remove this ContentType?");
        if (result && ContentTypeId != null)
        {
            await ContentTypeClient.DeleteAsync(View.Id);
            GoBack();
        }
    }
    void GoBack()
    {
        NavigationManager.NavigateTo("/admin/content-types");
    }

    protected override async Task OnInitializedAsync()
    {
        ContentTypeId = NavigationManager.GetIdFromQuery();

        if (ContentTypeId != null)
            try
            {
                await LoadData();
            }
            catch (Exception)
            {
                Message = "An error occured!";
            }
    }
}

@namespace FluentCMS.Web.UI.Plugins.ContentTypeManagement.ContentTypeFields

<Grid Gutter="GridGutter.Large">
    @foreach (var type in types)
    {
        <GridItem @key="type.Key"
                  Small="GridItemColumn.Six">
            <Button Block="true"
                    Item="true"
                    style="height: 100%;"
                    OnClick="() => Select(type)">
                <Icon Name="type.Icon" />
                <span>
                    &nbsp;
                </span>
                <div>
                    <Typography Align="TextAlign.Start"
                                Size="TextSize.Default"
                                Weight="TextWeight.SemiBold">
                        @type.Title
                    </Typography>
                    <Typography Align="TextAlign.Start"
                                Size="TextSize.Small"
                                Weight="TextWeight.Thin">
                        @type.Description
                    </Typography>
                </div>
            </Button>
        </GridItem>
    }
</Grid>

@code {
    [Parameter]
    public Base Type { get; set; }

    [Parameter]
    public EventCallback<Base> TypeChanged { get; set; }

    List<Base> types = new();

    void Select(Base type)
    {
        TypeChanged.InvokeAsync(type);
    }

    protected override void OnInitialized()
    {
        types = ContentTypeFieldExplorer.Load();
    }
}

<Page>
    <PageHeader HasBack="false"
                Title="Content Types List">
        <PageHeaderActions>
            <ButtonGroup>
                <Select @bind-Value="AppSlug" OnChange="OnAppSlugChanged">
                    @foreach (var app in Apps)
                    {
                        <Option Value="app.id">@app.Title</Option>
                    }
                </Select>
                <Button Color="Color.Primary"
                        Href="?PluginDef=ContentType Management&typeName=Create ContentType">
                    <Icon Name="IconName.Plus" />
                    Add Content Type
                </Button>
            </ButtonGroup>
        </PageHeaderActions>
    </PageHeader>
    <PageBody>
        <Table>
            <TableHead>
                <TableCell>Slug</TableCell>
                <TableCell>Title</TableCell>
                <TableCell>Description</TableCell>
                <TableCell>Actions</TableCell>
            </TableHead>
            <TableBody>
                @foreach (var contentType in ContentTypes) {
                    <TableRow>
                        <TableCell> @contentType.Slug </TableCell>
                        <TableCell> @contentType.Title </TableCell>
                        <TableCell> @contentType.Description </TableCell>
                        <TableCell>
                            <ButtonGroup>
                                <Button Color="Color.Primary"
                                        Href="@($"?PluginDef=ContentType Management&typeName=Update ContentType&id={contentType.Id}")"
                                        Size="ButtonSize.Small">
                                    <Icon Name="IconName.Edit" />
                                    Edit
                                </Button>
                                <Button Href="@($"?PluginDef=ContentType Management&typeName=ContentType Detail&id={contentType.Id}")"
                                        Size="ButtonSize.Small">
                                    <Icon Name="IconName.Eye" />
                                    Preview
                                </Button>
                            </ButtonGroup>
                        </TableCell>
                    </TableRow>
                }
            </TableBody>
        </Table>
    </PageBody>
</Page>

@code {
    [Inject]
    AppClient? AppClient { get; set; }

    [Inject]
    ContentTypeClient? ContentTypeClient { get; set; }

    [Inject]
    ConfirmService Confirm { get; set; }

    string? AppSlug {get; set;}

    List<AppDetailResponse> Apps { get; set; } = [];

    List<ContentTypeDetailResponse> ContentTypes { get; set; } = [];

    protected override async Task OnInitializedAsync()
    {
        var appResponse = await AppClient!.GetAllAsync();

        if(appResponse?.Data != null)
        {
            Apps = appResponse.Data.ToList();
        }
    }

    async Task LoadData()
    {
        var response = await ContentTypeClient!.GetAllAsync(AppSlug);

        if (response?.Data != null)
        {
            ContentTypes = response.Data.ToList();
        }
    }

    async Task OnAppSlugChanged(string slug) {
        AppSlug = slug;
        await LoadData();
    }
}

<Page>
    <PageHeader HasBack="false" Title="Content Types List">
        <PageHeaderActions>
            <ButtonGroup>
                <Button Color="Color.Primary"
                        Href="@NavigationManager.Plugin("ContentType Management", "Create ContentType")"
                        id="contentTypeCreateButton"
                        Size="ButtonSize.Small">
                    <Icon Name="IconName.Plus" />
                    Add Content Type
                </Button>
            </ButtonGroup>
        </PageHeaderActions>
    </PageHeader>
    <PageBody>
        <Card>

            <Table>
                <TableHead>
                    <TableCell>Slug</TableCell>
                    <TableCell>Title</TableCell>
                    <TableCell>Description</TableCell>
                    <TableCell Width="TableColumnWidth.Small"></TableCell>
                </TableHead>
                <TableBody id="contentTypeListTable">
                    @foreach (var contentType in ContentTypes)
                    {
                        <TableRow>
                            <TableCell>
                                @contentType.Slug
                            </TableCell>
                            <TableCell>
                                @contentType.Title
                            </TableCell>
                            <TableCell>
                                @contentType.Description
                            </TableCell>
                            <TableCell>
                                <ButtonGroup>
                                    @* TODO: Add preview when preview page designed *@
                                    
                                    <Button data-test="edit-btn"
                                            Ghost="true"  
                                            Href="@NavigationManager.Plugin("ContentType Management", "Update ContentType", new { id = contentType.Id })"
                                            Size="ButtonSize.Small">
                                        <Icon Name="IconName.Edit" />
                                    </Button>
                                    <Tooltip Placement="TooltipPlacement.Top">Edit</Tooltip>

                                    <Button data-test="delete-btn"
                                            Ghost="true"
                                            Size="ButtonSize.Small"
                                            OnClick="@(evt => OnDelete(contentType))">
                                        <Icon Name="IconName.Delete" />
                                    </Button>
                                    <Tooltip Placement="TooltipPlacement.Top">Delete</Tooltip>
                                </ButtonGroup>
                            </TableCell>
                        </TableRow>
                    }
                </TableBody>
            </Table>
            @if (Loaded && ContentTypes.Count == 0)
            {
                <EmptyTable Message="No Content Types Found!">
                    <Button autofocus="true"
                            Color="Color.Primary"
                            Href="@NavigationManager.Plugin("ContentType Management", "Create ContentType")"
                            id="contentTypeCreateButton"
                            Size="ButtonSize.Small">
                        <Icon Name="IconName.Plus" />
                        Add Content Type
                    </Button>
                </EmptyTable>
            }
        </Card>

    </PageBody>
</Page>

@code {
    [Inject]
    ConfirmService Confirm { get; set; } = default!;

    [Inject]
    ContentTypeClient ContentTypeClient { get; set; } = default!;

    [CascadingParameter]
    public System.Net.Http.HttpContent? HttpContext { get; set; }

    [Inject]
    ILocalStorageService LocalStorageService { get; set; } = default!;

    [Inject]
    NavigationManager NavigationManager { get; set; } = default!;

    bool Loaded { get; set; }

    List<ContentTypeDetailResponse> ContentTypes { get; set; } = [];

    async Task Load()
    {
        var response = await ContentTypeClient.GetAllAsync();

        if (response?.Data == null) return;

        ContentTypes = response.Data.ToList();

        Loaded = true;
    }

    async Task OnDelete(ContentTypeDetailResponse contentType)
    {
        var result = await Confirm.Show("Are you sure you want to remove this contentType?");

        if (!result) return;

        await ContentTypeClient.DeleteAsync(contentType.Id);

        await Load();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender) return;
        Loaded = true;
        await Load();
        StateHasChanged();
    }
}

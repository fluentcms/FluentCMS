<Page>
    <PageHeader HasBack="false"
                Title="Users List">
        <PageHeaderActions>
            <ButtonGroup>
                <Button Color="Color.Primary"
                        Href="?PluginDef=User Management&typeName=Create User">
                    <Icon Name="IconName.Plus" />
                    Add User
                </Button>
            </ButtonGroup>
        </PageHeaderActions>
    </PageHeader>
    <PageBody>
        <Table>
            <TableHead>
                <TableCell>Username</TableCell>
                <TableCell>Email</TableCell>
                <TableCell>Actions</TableCell>
            </TableHead>
            <TableBody>
                @foreach (var user in Users) {
                    <TableRow>
                        <TableCell> @user.Username </TableCell>
                        <TableCell> @user.Email </TableCell>
                        <TableCell>
                            <ButtonGroup>
                                <Button Color="Color.Primary"
                                        Href="@($"?PluginDef=User Management&typeName=Update User&id={user.Id}")"
                                        Size="ButtonSize.Small">
                                    <Icon Name="IconName.Edit" />
                                    Edit
                                </Button>
                                <Button Href="@($"?PluginDef=User Management&typeName=User Detail&id={user.Id}")"
                                        Size="ButtonSize.Small">
                                    <Icon Name="IconName.Eye" />
                                    Preview
                                </Button>
                            </ButtonGroup>
                        </TableCell>
                    </TableRow>
                }
            </TableBody>
        </Table>
    </PageBody>
</Page>

@code {
    [Inject]
    UserClient? UserClient { get; set; }

    [Inject]
    ConfirmService Confirm { get; set; }

    List<UserDetailResponse> Users { get; set; } = [];

    protected override async Task OnInitializedAsync()
    {
        var response = await UserClient!.GetAllAsync();

        if (response?.Data != null)
        {
            Users = response.Data.ToList();
        }
    }
}

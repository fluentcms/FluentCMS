@using Microsoft.AspNetCore.Http
<!DOCTYPE html>
<html lang="en">
<head>
    @* These lines should be here to avoid ui flickering *@
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>FluentCMS</title>
    <link rel="stylesheet" href="/_content/FluentCMS.Web.UI.Components/css/app.min.css" />
    <link rel="icon" type="image/png" href="favicon.png" />
    <base href="/" />

    <HeadOutlet @rendermode="RenderMode" />
</head>
<body>
<pre>
@(RenderMode?.ToString() ?? "static")
</pre>
<Routes @rendermode="RenderMode"/>
<script src="_framework/blazor.web.js"></script>
</body>
</html>

@code {
    [Inject] SetupClient SetupClient { get; set; }
    [CascadingParameter] public HttpContext HttpContext { get; set; } = default!;
    [Inject] NavigationManager NavigationManager { get; set; }

    private readonly string[] _staticRenderModePaths = ["/auth"];

    public bool Initialized { get; set; } = false;

    public IComponentRenderMode? RenderMode => (!_staticRenderModePaths.Any(x => HttpContext.Request.Path.StartsWithSegments(x, StringComparison.OrdinalIgnoreCase)) && Initialized) ? InteractiveServer : null;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        Initialized = (await SetupClient.IsInitializedAsync()).Data;
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        if (HttpContext == null && RenderMode == null)
        {
            NavigationManager.Refresh(true);
        }
    }


}

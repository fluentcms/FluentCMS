@page "/previews/components"
@layout PanelLayout
@rendermode InteractiveServer

<div class="px-4 mx-auto container">

    <PageHeader Title="Components">
        <PageActions>
            <NavigationButton To="/">Go Back</NavigationButton>
        </PageActions>
    </PageHeader>

    @* #region Alert *@
    <div class="py-8">
        <h2 class="font-bold text-2xl">Alerts</h2>
        <div class="py-4 flex flex-col gap-4">
            <Alert Type="AlertTypeEnum.Success"> Change a few things up and try submitting again.</Alert>
            <Alert Dismissible Type="AlertTypeEnum.Warning"> Change a few things up and try submitting again.</Alert>
             <Alert Type="AlertTypeEnum.Danger"> Change a few things up and try submitting again.</Alert>
             <Alert Type="AlertTypeEnum.Info"> Change a few things up and try submitting again.</Alert>
         </div>
     </div>
     @* #endregion *@

     @* #region Badge *@
     <div class="py-8">
         <h2 class="font-bold text-2xl">Badges</h2>
         <div class="py-4 flex gap-2">
             <Badge>Badge Content</Badge>
             <Badge Color="@ColorEnum.Primary">Primary</Badge>
             <Badge Color="@ColorEnum.Secondary">Secondary</Badge>
             <Badge Color="@ColorEnum.Success">Success</Badge>
             <Badge Color="@ColorEnum.Danger">Danger</Badge>
             <Badge Color="@ColorEnum.Warning">Warning</Badge>
             <Badge Color="@ColorEnum.Info">Info</Badge>
         </div>
     </div>
     @* #endregion *@

     @* #region Confirm *@
     <div class="py-8">
         <h2 class="font-bold text-2xl">Confirms</h2>
         <div class="py-4 flex gap-2">
             <Confirm @bind-Open=ConfirmValue
                              Static
                      Message="Are you sure you want to delete this product?"
                      OnCancel="() => Console.Write(1)"
                      OnConfirm="() => Console.Write(2)" />
             <button @onclick="() => ConfirmValue = !ConfirmValue">Open</button>
         </div>
     </div>
     @* #endregion *@

     @* #region Icon *@
     <div class="py-8">
         <h2 class="font-bold text-2xl">Icons</h2>
         <div class="py-4 flex flex-col gap-4">
             <Icon Name="IconNameEnum.Plus" />
             <Icon Name="IconNameEnum.InformationFilled" />
             <Icon Name="IconNameEnum.Delete" />
         </div>
         <div class="py-4 flex flex-col gap-4">
             <h1 class="text-4xl">
                 <Icon Name="IconNameEnum.InformationFilled" /> Default
             </h1>
             <div>
                 <Icon Size="SizeEnum.Small" Name="IconNameEnum.InformationFilled" /> Small
             </div>
             <div>
                 <Icon Size="SizeEnum.Medium" Name="IconNameEnum.InformationFilled" /> Medium
             </div>
             <div>
                 <Icon Size="SizeEnum.Large" Name="IconNameEnum.InformationFilled" /> Large
             </div>
         </div>
         <div class="py-4 flex flex-col gap-4">
             <h1 class="text-4xl">
                 <Icon Color="ColorEnum.Primary" Name="IconNameEnum.InformationFilled" /> Primary
             </h1>
             <h1 class="text-4xl">
                 <Icon Color="ColorEnum.Secondary" Name="IconNameEnum.InformationFilled" /> Secondary
             </h1>
             <h1 class="text-4xl">
                 <Icon Color="ColorEnum.Success" Name="IconNameEnum.InformationFilled" /> Success
             </h1>
             <h1 class="text-4xl">
                 <Icon Color="ColorEnum.Danger" Name="IconNameEnum.InformationFilled" /> Danger
             </h1>
             <h1 class="text-4xl">
                 <Icon Color="ColorEnum.Info" Name="IconNameEnum.InformationFilled" /> Info
             </h1>
             <h1 class="text-4xl">
                 <Icon Color="ColorEnum.Warning" Name="IconNameEnum.InformationFilled" /> Warning
             </h1>
         </div>
     </div>
     @* #endregion *@

     @* #region Dropdown *@
     <div class="py-8">
         <h2 class="font-bold text-2xl">Dropdown</h2>
         <div class="p-4">
             <ButtonGroup>
                 <Dropdown AutoClose>
                    <DropdownButton Color="ColorEnum.Primary">AutoClose</DropdownButton>
                    <DropdownMenu Placement="DropdownPlacementEnum.Bottom">
                        <DropdownItem Href="/previews/content-manager">Content Manager</DropdownItem>
                        <DropdownItem Href="/previews/content-type-builder">Content Type Builder</DropdownItem>
                        <DropdownItem Href="/previews/components">Components</DropdownItem>
                        <DropdownItem OnClick="() => DropdownCounter += 1">Increment (@DropdownCounter)</DropdownItem>
                    </DropdownMenu>
                </Dropdown>
                <Dropdown>
                    <DropdownButton Color="ColorEnum.Danger">Bottom</DropdownButton>
                    <DropdownMenu Placement="DropdownPlacementEnum.Bottom">
                        <DropdownItem Href="/previews/content-manager">Content Manager</DropdownItem>
                        <DropdownItem Href="/previews/content-type-builder">Content Type Builder</DropdownItem>
                        <DropdownItem Href="/previews/components">Components</DropdownItem>
                        <DropdownItem OnClick="() => DropdownCounter += 1">Increment (@DropdownCounter)</DropdownItem>
                    </DropdownMenu>
                </Dropdown>
                <Dropdown>
                    <DropdownButton>BottomEnd</DropdownButton>
                    <DropdownMenu Placement="DropdownPlacementEnum.BottomEnd">
                        <DropdownItem Href="/previews/content-manager">Content Manager</DropdownItem>
                        <DropdownItem Href="/previews/content-type-builder">Content Type Builder</DropdownItem>
                        <DropdownItem Href="/previews/components">Components</DropdownItem>
                        <DropdownItem OnClick="() => DropdownCounter += 1">Increment (@DropdownCounter)</DropdownItem>
                    </DropdownMenu>
                </Dropdown>
                <Dropdown>
                    <DropdownButton>Top</DropdownButton>
                    <DropdownMenu Placement="DropdownPlacementEnum.Top">
                        <DropdownItem Href="/previews/content-manager">Content Manager</DropdownItem>
                        <DropdownItem Href="/previews/content-type-builder">Content Type Builder</DropdownItem>
                        <DropdownItem Href="/previews/components">Components</DropdownItem>
                        <DropdownItem OnClick="() => DropdownCounter += 1">Increment (@DropdownCounter)</DropdownItem>
                    </DropdownMenu>
                </Dropdown>
                 <Dropdown>
                    <DropdownButton>TopEnd</DropdownButton>
                    <DropdownMenu Placement="DropdownPlacementEnum.TopEnd">
                        <DropdownItem Href="/previews/content-manager">Content Manager</DropdownItem>
                        <DropdownItem Href="/previews/content-type-builder">Content Type Builder</DropdownItem>
                        <DropdownItem Href="/previews/components">Components</DropdownItem>
                        <DropdownItem OnClick="() => DropdownCounter += 1">Increment (@DropdownCounter)</DropdownItem>
                    </DropdownMenu>
                </Dropdown>
                <Dropdown>
                    <DropdownButton>Left</DropdownButton>
                    <DropdownMenu Placement="DropdownPlacementEnum.Left">
                        <DropdownItem Href="/previews/content-manager">Content Manager</DropdownItem>
                        <DropdownItem Href="/previews/content-type-builder">Content Type Builder</DropdownItem>
                        <DropdownItem Href="/previews/components">Components</DropdownItem>
                        <DropdownItem OnClick="() => DropdownCounter += 1">Increment (@DropdownCounter)</DropdownItem>
                    </DropdownMenu>
                </Dropdown>
                <Dropdown>
                    <DropdownButton>LeftEnd</DropdownButton>
                    <DropdownMenu Placement="DropdownPlacementEnum.LeftEnd">
                        <DropdownItem Href="/previews/content-manager">Content Manager</DropdownItem>
                        <DropdownItem Href="/previews/content-type-builder">Content Type Builder</DropdownItem>
                        <DropdownItem Href="/previews/components">Components</DropdownItem>
                        <DropdownItem OnClick="() => DropdownCounter += 1">Increment (@DropdownCounter)</DropdownItem>
                    </DropdownMenu>
                </Dropdown>
                <Dropdown>
                    <DropdownButton>Right</DropdownButton>
                    <DropdownMenu Placement="DropdownPlacementEnum.Right">
                        <DropdownItem Href="/previews/content-manager">Content Manager</DropdownItem>
                        <DropdownItem Href="/previews/content-type-builder">Content Type Builder</DropdownItem>
                        <DropdownItem Href="/previews/components">Components</DropdownItem>
                        <DropdownItem OnClick="() => DropdownCounter += 1">Increment (@DropdownCounter)</DropdownItem>
                    </DropdownMenu>
                </Dropdown>
                <Dropdown>
                    <DropdownButton>RightEnd</DropdownButton>
                    <DropdownMenu Placement="DropdownPlacementEnum.RightEnd">
                        <DropdownItem Href="/previews/content-manager">Content Manager</DropdownItem>
                        <DropdownItem Href="/previews/content-type-builder">Content Type Builder</DropdownItem>
                        <DropdownItem Href="/previews/components">Components</DropdownItem>
                        <DropdownItem OnClick="() => DropdownCounter += 1">Increment (@DropdownCounter)</DropdownItem>
                    </DropdownMenu>
                </Dropdown>

            </ButtonGroup>
        </div>
		<div class="p-6">
			<Dropdown>
				<DropdownButton Color="ColorEnum.Warning">Filters</DropdownButton>
				<DropdownMenu Class="custom-dropdown-menu">
					<ButtonGroup>
						<Button Color="ColorEnum.Primary">First</Button>
						<Button Color="ColorEnum.Primary">Second</Button>
						<Button Color="ColorEnum.Primary">Third</Button>
						<Button Color="ColorEnum.Primary">Fourth</Button>
					</ButtonGroup>

				</DropdownMenu>

			</Dropdown>

		</div>
    </div>
    @* #endregion *@
        @* #endregion *@

    @* #region Modal *@
    <div class="py-8">
        <h2 class="font-bold text-2xl">Modals</h2>
        <div class="py-4 flex flex-col gap-4">
            <Button OnClick="() => ModalOpen = !ModalOpen">
                Open Modal
            </Button>
            <Modal @bind-Open=@ModalOpen>
                <ModalHeader Title="Terms of Service" Closable />
                 <ModalBody>
                     <p class="text-base leading-relaxed text-gray-500 dark:text-gray-400">
                         With less than a month to go before the European Union enacts new consumer privacy laws for its
                         citizens, companies around the world are updating their terms of service agreements to comply.
                     </p>
                 </ModalBody>
                 <ModalFooter>
                     <ButtonGroup>
                         <Button Color=@ColorEnum.Primary>
                             I accept
                         </Button>
                         <Button>
                             Decline
                         </Button>
                     </ButtonGroup>
                 </ModalFooter>
             </Modal>
         </div>
     </div>
     @* #endregion *@

    @* #region Buttons *@
    <div class="py-8">
        <h2 class="font-bold text-2xl">Buttons</h2>
        <div class="py-4 flex gap-4">
            <ButtonGroup>
                <Button>Hello</Button>
                <Button Outline Color=@ColorEnum.Primary>Primary</Button>
                <Button Outline Color=@ColorEnum.Secondary>Secondary</Button>
                <Button Outline Color=@ColorEnum.Success>Success</Button>
                <Button Outline Color=@ColorEnum.Info>Info</Button>
                <Button Outline Color=@ColorEnum.Warning>Warning</Button>
                <Button Outline Color=@ColorEnum.Danger>Danger</Button>
            </ButtonGroup>
        </div>
        <div class="py-4 flex gap-4">
            <ButtonGroup Wrap=false>
                <Button Disabled>Hello</Button>
                 <Button Outline Color=@ColorEnum.Secondary>Secondary</Button>
                 <Button Outline Color=@ColorEnum.Success>Success</Button>
                 <Button Outline Color=@ColorEnum.Info>Info</Button>
                 <Button Outline Color=@ColorEnum.Warning>Warning</Button>
                 <Button Outline Color=@ColorEnum.Danger>Danger</Button>
             </ButtonGroup>
         </div>
         <div class="py-4 flex gap-4">
             <ButtonGroup>
                 <Button Disabled>Hello</Button>
                 <Button Disabled Color=@ColorEnum.Primary>Primary</Button>
                 <Button Disabled Color=@ColorEnum.Secondary>Secondary</Button>
                 <Button Disabled Color=@ColorEnum.Success>Success</Button>
                 <Button Disabled Color=@ColorEnum.Info>Info</Button>
                 <Button Disabled Color=@ColorEnum.Warning>Warning</Button>
                 <Button Disabled Color=@ColorEnum.Danger>Danger</Button>
             </ButtonGroup>
         </div>
         <div class="py-4 flex gap-4">
             <Button>
                 <Icon Name="IconNameEnum.InformationFilled" />
                 Hello
             </Button>
             <Button Color=@ColorEnum.Primary>
                 <Icon Name="IconNameEnum.InformationFilled" />
                 Primary
             </Button>
             <Button Color=@ColorEnum.Secondary>
                 <Icon Name="IconNameEnum.InformationFilled" />
                 Secondary
             </Button>
             <Button Color=@ColorEnum.Success>
                 <Icon Name="IconNameEnum.InformationFilled" />
                 Success
             </Button>
             <Button Color=@ColorEnum.Info>
                 <Icon Name="IconNameEnum.InformationFilled" />
                 Info
             </Button>
             <Button Color=@ColorEnum.Warning>
                 <Icon Name="IconNameEnum.InformationFilled" />
                 Warning
             </Button>
             <Button Color=@ColorEnum.Danger>
                 <Icon Name="IconNameEnum.InformationFilled" />
                 Danger
             </Button>
         </div>
         <div class="py-4 flex gap-4">
             <Button Outline>
                <Icon Name="IconNameEnum.InformationFilled" />
                Hello
            </Button>
            <Button Outline Color=@ColorEnum.Primary>
                 <Icon Name="IconNameEnum.InformationFilled" />
                 Primary
             </Button>
             <Button Outline Color=@ColorEnum.Secondary>
                 <Icon Name="IconNameEnum.InformationFilled" />
                 Secondary
             </Button>
             <Button Outline Color=@ColorEnum.Success>
                 <Icon Name="IconNameEnum.InformationFilled" />
                 Success
             </Button>
             <Button Outline Color=@ColorEnum.Info>
                 <Icon Name="IconNameEnum.InformationFilled" />
                 Info
             </Button>
             <Button Outline Color=@ColorEnum.Warning>
                 <Icon Name="IconNameEnum.InformationFilled" />
                 Warning
             </Button>
             <Button Outline Color=@ColorEnum.Danger>
                 <Icon Name="IconNameEnum.InformationFilled" />
                 Danger
             </Button>
         </div>
         <div class="py-4 flex gap-4">
             <Button Ghost>
                <Icon Name="IconNameEnum.InformationFilled" />
                Hello
            </Button>
            <Button Type="ButtonTypeEnum.Submit" Ghost Color=@ColorEnum.Primary>
                 <Icon Name="IconNameEnum.InformationFilled" />
                 Primary
             </Button>
             <Button Ghost Color=@ColorEnum.Secondary>
                 <Icon Name="IconNameEnum.InformationFilled" />
                 Secondary
             </Button>
             <Button Ghost Color=@ColorEnum.Success>
                 <Icon Name="IconNameEnum.InformationFilled" />
                 Success
             </Button>
             <Button Ghost Color=@ColorEnum.Info>
                 <Icon Name="IconNameEnum.InformationFilled" />
                 Info
             </Button>
             <Button Ghost Color=@ColorEnum.Warning>
                 <Icon Name="IconNameEnum.InformationFilled" />
                 Warning
             </Button>
             <Button Ghost Color=@ColorEnum.Danger>
                 <Icon Name="IconNameEnum.InformationFilled" />
                 Danger
             </Button>
         </div>
         <div>
             <Button Color="ColorEnum.Primary">Default</Button>
             <Button Color="ColorEnum.Primary" Size="SizeEnum.Small">Small</Button>
             <Button Color="ColorEnum.Primary" Size="SizeEnum.Medium">Medium</Button>
             <Button Color="ColorEnum.Primary" Size="SizeEnum.Large">Large</Button>
         </div>
     </div>
     @* #endregion *@

     @* #region Cards *@
     <div class="py-8">
         <h2 class="font-bold text-2xl">Cards</h2>
         <div class="py-4 flex flex-col align-start justify-start gap-4">
             <Card>Simple Card component</Card>
             <Card>
                 <CardTitle>Some Title</CardTitle>
                 Card With title
             </Card>
             <Card Width="SizeEnum.Default">
                 default Card
             </Card>
             <Card Width="SizeEnum.Small">
                 small Card
             </Card>
             <Card Width="SizeEnum.Medium">
                 medium Card
             </Card>
             <Card Width="SizeEnum.Large">
                 large Card
             </Card>
             <Card>
                 <CardBody>
                     <CardTitle>Card title</CardTitle>
                     Content inside card body
                     <Button Color="ColorEnum.Primary">Some action</Button>
                 </CardBody>
             </Card>
         </div>
     </div>
     @* #endregion *@

    @* region Tables *@
    <div class="py-8">
        <h2 class="font-bold text-2xl">Tables</h2>
        <div class="py-4 flex flex-col gap-4">
            <Table>
                <TableHead>
                    <TableCell>Id</TableCell>
                    <TableCell>Title</TableCell>
                    <TableCell>Created At</TableCell>
                    <TableCell>Updated At</TableCell>
                    <TableCell>State</TableCell>
                    <TableCell></TableCell>
                </TableHead>
                <TableBody>
                    @foreach (var item in data)
                    {
                        <TableRow>
                            <TableCell>#@item.Id</TableCell>
                                <TableCell>@item.Title</TableCell>
                                <TableCell>@item.CreatedAt</TableCell>
                                <TableCell>@item.UpdatedAt</TableCell>
                                <TableCell>
                                    <Badge Color="ColorEnum.Primary">
                                        @item.State
                                </Badge>
                            </TableCell>
                            <TableCell>
                                Button Group

                            </TableCell>
                        </TableRow>
                    }
                </TableBody>
                <TableFoot>
                    <TableCell>Total</TableCell>
                    <TableCell></TableCell>
                    <TableCell></TableCell>
                    <TableCell>5,233</TableCell>
                    <TableCell></TableCell>
                    <TableCell>12,200</TableCell>

                </TableFoot>
            </Table>
        </div>
    </div>
    @* #endregion *@

    @* #region Spinner *@
    <div class="py-8">
        <h2 class="font-bold text-2xl">Spinner</h2>
        <div class="py-4 flex gap-4">
            <Spinner />
            <Spinner Color="@ColorEnum.Primary" />
            <Spinner Color="@ColorEnum.Secondary" />
            <Spinner Color="@ColorEnum.Success" />
            <Spinner Color="@ColorEnum.Danger" />
            <Spinner Color="@ColorEnum.Warning" />
            <Spinner Color="@ColorEnum.Info" />
        </div>
    </div>
    @* #endregion *@

    @* region Paginations *@
    <div class="py-8">
        <h2 class="font-bold text-2xl">Pagination</h2>
        <div class="py-4 flex flex-col gap-4">
            <Pagination Total="10" Current="5"></Pagination>
            <Pagination Total="10" Current="5" ShowIcons></Pagination>
         </div>
     </div>
     @* #endregion *@
 </div>

 @code {
    private bool Check1Value { get; set; } = true;
    private bool Check2Value { get; set; } = false;

    private bool ConfirmValue { get; set; } = false;

    private int DropdownCounter { get; set; } = 0;
    private string Input1Value { get; set; } = "initial";
    private string Input2Value { get; set; }

    private string Select1Value { get; set; } = "US";
    private string Select2Value { get; set; }

    private bool ModalOpen { get; set; }

    public class Item
    {
        public string Id;
        public string Title;
        public string CreatedAt;
        public string UpdatedAt;
        public string State;
    }

    private List<Item> data = new List<Item> {
        new Item {
            Id= "1",
            Title = "Apple iMac 28\"",
            CreatedAt = "Tuesday, December 12, 2023 at 7:35 PM",
            UpdatedAt = "Tuesday, December 12, 2023 at 7:35 PM",
            State = "Desktop PC"
        },
        new Item {
            Id= "2",
            Title = "Apple iMac 29\"",
            CreatedAt = "Tuesday, December 13, 2023 at 7:35 PM",
            UpdatedAt = "Tuesday, December 13, 2023 at 7:35 PM",
            State = "Desktop PC"
        },
        new Item {
            Id= "3",
            Title = "Apple iMac 27\"",
            CreatedAt = "Tuesday, December 14, 2023 at 7:35 PM",
            UpdatedAt = "Tuesday, December 15, 2023 at 7:35 PM",
            State = "Desktop PC"
        },
    };
}

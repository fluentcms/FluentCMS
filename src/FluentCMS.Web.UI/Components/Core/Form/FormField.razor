@inherits BaseComponent

@if (InlineLabel)
{
    <label @attributes="AdditionalAttributes"
           class="@this.GetClasses()">
        @if (!string.IsNullOrEmpty(Label))
        {
            <FormLabel For="Id"
                       IsSpan="true"
                       Required="Required"
                       State="State">
                @Label
            </FormLabel>
        }

        @ChildContent

        @if (!string.IsNullOrEmpty(Hint))
        {
            <FormFieldHint State="State">@Hint</FormFieldHint>
        }
    </label>
}
else
{

    <div @attributes="AdditionalAttributes"
         class=@this.GetClasses()>
        @if (!string.IsNullOrEmpty(Label))
        {
            <FormLabel For="Id"
                       Required="Required"
                       State="State">
                @Label
            </FormLabel>
        }

        @if (IconStart != IconNameEnum.Default || IconEnd != IconNameEnum.Default)
        {
            <div class="@this.ClassName("FormFieldGroup")">
                @if (IconStart != IconNameEnum.Default)
                {
                    <div class="@this.ClassName("FormFieldStartIconWrapper")">
                        <Icon Name="IconStart" />
                    </div>
                }
                @ChildContent

                @if (IconEnd != IconNameEnum.Default)
                {
                    <div class="@this.ClassName("FormFieldEndIconWrapper")">
                        <Icon Name="IconEnd" />
                    </div>
                }
            </div>
        }
        else
        {
            @ChildContent
        }

        @if (!string.IsNullOrEmpty(Hint))
        {
            <FormFieldHint State="State">@Hint</FormFieldHint>
        }
    </div>
}

@code {
    [Parameter]
    [CssProperty]
    public bool Dense { get; set; }

    [CssProperty]
    public bool HasEndIcon => IconEnd != IconNameEnum.Default;

    [CssProperty]
    public bool HasStartIcon => IconStart != IconNameEnum.Default;

    [Parameter]
    public string? Hint { get; set; }

    [Parameter]
    public IconNameEnum IconEnd { get; set; }

    [Parameter]
    public IconNameEnum IconStart { get; set; }

    [Parameter]
    public string Id { get; set; }

    [Parameter]
    [CssProperty]
    public bool InlineLabel { get; set; }

    [Parameter]
    public string Label { get; set; } = String.Empty;

    [Parameter]
    public bool Required { get; set; } = false;

    [Parameter]
    [CssProperty]
    public FormFieldStateEnum State { get; set; } = FormFieldStateEnum.Default;
}

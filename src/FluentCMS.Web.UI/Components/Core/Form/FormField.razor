@inherits BaseComponent

@if(InlineLabel) {
    <label class=@this.GetClasses() @attributes=@AdditionalAttributes>
        @if(!string.IsNullOrEmpty(Label)) {
            <FormLabel IsSpan State=@State Required=@Required For="@Id">
                @Label
            </FormLabel>
        }

        @ChildContent

        @if(!string.IsNullOrEmpty(Hint)) {
            <FormFieldHint State=@State>@Hint</FormFieldHint>
        }
    </label>

} else {

    <div class=@this.GetClasses() @attributes=@AdditionalAttributes>
        @if(!string.IsNullOrEmpty(Label)) {
            <FormLabel State=@State Required=@Required For="@Id">
                @Label
            </FormLabel>
        }

        @if (IconStart != IconNameEnum.Default || IconEnd != IconNameEnum.Default)
        {
            <div class=@this.ClassName("FormFieldGroup")>
                @if (IconStart != IconNameEnum.Default)
                {
                    <div class=@this.ClassName("FormFieldStartIconWrapper")>
                        <Icon Name="@IconStart" />
                    </div>
                }
                @ChildContent

                @if (IconEnd != IconNameEnum.Default)
                {
                    <div class=@this.ClassName("FormFieldEndIconWrapper")>
                        <Icon Name="@IconEnd" />
                    </div>
                }
            </div>
        }
        else
        {
            @ChildContent
        }

        @if(!string.IsNullOrEmpty(Hint)) {
            <FormFieldHint State=@State>@Hint</FormFieldHint>
        }
    </div>
}

@code {
    [Parameter]
    public string Id {get; set;}

    [Parameter]
    public string Hint {get; set;} = String.Empty;

    [Parameter]
    public string Label {get; set;} = String.Empty;

    [Parameter]
    public bool Required {get; set;} = false;

    [Parameter]
    [CssProperty]
    public bool InlineLabel {get;set;}

    [Parameter]
    public IconNameEnum IconStart { get; set; }

    [Parameter]
    public IconNameEnum IconEnd { get; set; }

    [CssProperty]
    public bool HasStartIcon => IconStart != IconNameEnum.Default;

    [CssProperty]
    public bool HasEndIcon => IconEnd != IconNameEnum.Default;

	[Parameter]
	[CssProperty]
	public FormFieldStateEnum State {get;set;} = FormFieldStateEnum.Default;
}
